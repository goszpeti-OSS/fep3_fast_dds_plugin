name: Build Dependencies

on:
  workflow_dispatch:

jobs:
  # build_x64_deps:
  #   runs-on: ${{ matrix.os }}
  #   timeout-minutes: 45

  #   strategy:
  #     matrix:
  #       name:
  #         [
  #           "ubuntu20",
  #           "windows2019",
  #         ]
  #       include:
  #         - name: "ubuntu20"
  #           os: ubuntu-20.04
  #           profile: linux_gcc_10
  #         - name: "windows2019"
  #           os: windows-2019
  #           profile: win_142
        
  #   env:
  #     LC_ALL: "en_US.UTF-8"
  #     CONAN_REVISIONS_ENABLED: "1"
  #     CONAN_NON_INTERACTIVE: "1"
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: 3.11
  #     - name: Install specific Conan version
  #       run: | # markupsafe is a workaround fix for broken conan dependencies
  #         pip install "conan==1.59.0" --use-pep517
  #     - name: Add remote
  #       run: |
  #           conan remote add fep3_oss ${{ vars.FEP3_GITLAB_URL }} false
  #     - name: Log in to remote
  #       run: |
  #           conan user -p ${{ secrets.GITLAB_FEP3_PW }} -r fep3_oss ${{ secrets.GITLAB_FEP3_USERNAME }}
  #     - name: Build dependencies
  #       run: |
  #         conan create thirdparty/dev_essential/conanfile.py fep_oss/testing -pr build_profiles/${{ matrix.profile}}
  #     - name: Upload conan packages
  #       run: |
  #           conan upload "dev_essential*" -r=fep3_oss --all --confirm --force
          
          # conan upload "fep*" -r=fep3_oss --all --confirm --force

          # conan create thirdparty/fast_dds/conanfile.py /_@_ -pr build_profiles/${{ matrix.profile}}
          # conan create thirdparty/fep3_participant/conanfile.py /_@_ -pr build_profiles/${{ matrix.profile}}
          # conan create thirdparty/fep3_system/conanfile.py /_@_ -pr build_profiles/${{ matrix.profile}}
          # conan create thirdparty/fep3_base_utilities/conanfile.py /_@_ -pr build_profiles/${{ matrix.profile}}
          # conan create thirdparty/fep3_sdk/conanfile.py /_@_ -pr build_profiles/${{ matrix.profile}}
  build_armv8_deps_docker:
    runs-on: ubuntu-latest
    steps:
      # - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu20.04
          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Mount the artifacts directory as /artifacts in the container
          # dockerRunArgs: |
          #   --volume "${PWD}/artifacts:/artifacts"
          # env: | # YAML, but pipe character is necessary
          #   PATH: $PATH:/root/bin
          install: | 
            apt-get update -q -y
            apt-get install git wget g++-10 gcc-10 python3 python3-pip -y
            pip install "conan==1.59.0" --use-pep517

          run: |
            uname -a
            conan remote add fep3_oss ${{ vars.FEP3_GITLAB_URL }} false

# 
# conan user -p ${{ secrets.GITLAB_FEP3_PW }} -r fep3_oss ${{ secrets.GITLAB_FEP3_USERNAME }}
# conan create thirdparty/dev_essential/conanfile.py fep_oss/testing -pr build_profiles/linux_armv8_gcc10
# conan upload "dev_essential*" -r=fep3_oss --all --confirm --force
